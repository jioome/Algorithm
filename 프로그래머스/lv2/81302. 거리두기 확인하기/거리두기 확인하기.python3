from collections import deque


def bfs(p,i,j) : 
    visited = [[0]*5 for _ in range(5)]
    dx = [-1,1,0,0]
    dy = [0,0,-1,1]
    q = deque()
    q.append((i,j,0))
    visited[i][j] = 1 # 처음 응시자 방문 처리 
    
    while q : 
        x,y,dist = q.popleft()
        if p[x][y] == 'P' and 0 < dist <3 : 
            return False 
    
        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]
            if 0 <= nx < 5 and 0 <= ny < 5 : 
                if visited[nx][ny] == 0 and p[nx][ny] != 'X':
                    q.append((nx,ny,dist+1))
                    visited[nx][ny] = 1 
    return True
    

def solution(places):
    
    answer = []
    for p in places : 
        result = 1 # 기본 거리두기 지키는 경우
        for i in range(5):
            for j in range(5):
                if p[i][j] == 'P':
                    if not bfs(p,i,j) : 
                        result = 0 # 거리두기 지키지 않는 경우 
        answer.append(result)
    
    return answer